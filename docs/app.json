[{"name":"app.R","content":"###Projet final###\n\nlibrary(shiny)\n#install.packages(\"dplyr\")\nlibrary(dplyr)\n#install.packages(\"ggplot2\")\nlibrary(ggplot2)\n#install.packages(\"shinylive\")\nlibrary(shinylive)\n#install.packages(\"DT\")\nlibrary(DT)\n#install.packages(\"bslib\")\nlibrary(bslib) #theme\n#install.packages(\"glue\")\nlibrary(glue) #titre interactif\n\n# Define UI for application that draws a histogram\nui <- fluidPage(\n    theme = bs_theme(version = 5, bootswatch = \"minty\"),\n    \n    titlePanel(\"Exploration des Diamants\"),\n\n    sidebarLayout(\n        sidebarPanel(\n            radioButtons(inputId = \"rose\", \n                       label = \"Colorier les points en rose ?\", \n                       choices = c(\"Oui\" = T, \n                                   \"Non\" = F),\n                       selected = T) ,\n            selectInput(inputId = \"filtrer\", \n                        label = \"Choisir une couleur Ã  filtrer :\", \n                        choices = sort(unique(diamonds$color)), \n                        selected = T),\n            sliderInput(\"prix\",\n                        \"Prix maximum :\",\n                        min = 300,\n                        max = 20000,\n                        value = 5000),\n            actionButton(\"notif\", \n                         \"Afficher une notification\")\n        ),\n\n        mainPanel(\n           plotOutput(\"nuage\"),\n           DTOutput(outputId = \"tableau\")\n        )\n    )\n)\n\n\nserver <- function(input, output) {\n    donnees <- reactive({\n      subset(diamonds, \n             color == input$filtrer & \n               price <= input$prix)\n    })\n\n    #Nuage de points\n    output$nuage <- renderPlot({\n      if (input$rose == T) {\n        col_pts <- \"pink\"\n      } else {\n        col_pts <- \"#4F4F4F\"\n      }\n      \n      ggplot(donnees(), aes(x = carat, y = price)) +\n        geom_point(color = col_pts) +\n        labs(title = glue(\"prix: {input$prix} & color: {input$filtrer}\")) +\n        theme(\n          plot.title = element_text(family = \"Rockwell Light\", color = \"#4F4F4F\"),\n          axis.title.x = element_text(family = \"Rockwell Light\", color = \"#4F4F4F\"),\n          axis.title.y = element_text(family = \"Rockwell Light\", color = \"#4F4F4F\"))\n    })\n    \n    #Tableau\n    output$tableau <- renderDT({\n      datatable(donnees(), \n                options = list(pageLength = 10, \n                               scrollX = T))\n    })\n    \n    #Notif\n    observeEvent(input$notif, {\n      showNotification(\n        glue(\"prix: {input$prix} & color: {input$filtrer}\"),\n        duration = 5\n      )\n    })\n}\n\n# Run the application \nshinyApp(ui = ui, server = server)\n","type":"text"},{"name":"project.Rproj","content":"Version: 1.0\n\nRestoreWorkspace: Default\nSaveWorkspace: Default\nAlwaysSaveHistory: Default\n\nEnableCodeIndexing: Yes\nUseSpacesForTab: Yes\nNumSpacesForTab: 2\nEncoding: UTF-8\n\nRnwWeave: Sweave\nLaTeX: pdfLaTeX\n","type":"text"}]
